env:
  S3_BUCKET_NAME: ws-springboot-build
  PROJECT_NAME: SpringBoot_AWS
  CODE_DEPLOY_APP_NAME: ws-deploy
  CODE_DEPLOY_GROUP_NAME: ws-deploy-group
  
name: deploy # Github Action에서 보여질 이름을 지정

on:
  release:
    types: [push] # push시 자동으로 실행된다
  push:
    branches: [main] # main 브랜치에서 동작
  workflow_dispatch: # 수동으로도 실행시킬 수 있다

jobs:
  build:
    runs-on: ubuntu-latest # 스크립트를 작동할 OS
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3 # 프로젝트 코드를 Checkout
      
    - name: Set up JDK 11
      uses: actions/setup-java@v3 # github action이 실행될 OS에 java를 설치한다
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew # 실행 권한 추가
      shell: bash
    
    - name: Build with Gradle
      run: ./gradlew clean build -x test # gradle wrapper를 통해 프로젝트를 빌드한다
      shell: bash
      
    - name: Get current time
      uses: 1466587594/get-current-time@v2
      id: current-time
      with:
        format: YYYY-MM-DDTHH-mm-ss # action 기준 시간이 UTC이기 때문에 KST로 변환
        utcOffset: "+09:00"
    
    - name: Show Current Time
      run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}" # 지정한 포맷대로 현재 시간을 표시
      shell: bash
      
    - name: Generate deployment package # (final)
      run: |
        mkdir -p before-deploy
        cp scripts/*.sh before-deploy/
        cp appspec.yml before-deploy/
        cp build/libs/*.jar before-deploy/
        cd before-deploy && zip -r before-deploy *
        cd ../ && mkdir -p deploy
        mv before-deploy/before-deploy.zip deploy/$PROJECT_NAME.zip
      shell: bash
      
      
    - name: Make zip file 
      run: zip -r ./$PROJECT_NAME.zip . # 프로젝트 이름으로 현재 폴더를 압축시킴
      shell: bash
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1 # settings에서 설정한 키값들로 aws에 접속
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
      
    - name: Upload to S3
      # s3의 프로젝트 이름에 해당하는 폴더에 zip파일을 저장한다
      run: aws s3 cp --region ap-northeast-2 ./deploy/$PROJECT_NAME.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$PROJECT_NAME.zip
      
    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODE_DEPLOY_GROUP_NAME --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$PROJECT_NAME.zip
